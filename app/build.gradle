apply plugin: 'com.android.application'

/* gets the version name from the latest Git tag */
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--always'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "org.torproject.torservices"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName getVersionName()
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        /*
          The Android Testing Support Library collects analytics to continuously improve the testing
          experience. More specifically, it uploads a hash of the package name of the application
          under test for each invocation. If you do not wish to upload this data, you can opt-out by
          passing the following argument to the test runner: disableAnalytics "true".
         */
        testInstrumentationRunnerArguments disableAnalytics: 'true'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: '../../tor-android/tor-android-binary/build/outputs/aar', include: ['*.aar'])
    implementation fileTree(dir: '../../jtorctl/build/libs', include: ['jtorctl-*.jar'])
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'commons-io:commons-io:2.6'
    androidTestImplementation 'commons-net:commons-net:3.6'
}
